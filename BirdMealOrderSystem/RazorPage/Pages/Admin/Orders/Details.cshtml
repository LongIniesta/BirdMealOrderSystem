@page
@model RazorPage.Pages.Admin.Orders.DetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "LayoutAdmin";
}

<div class="d-flex justify-content-between">
    <a asp-page="./Index">
        <img src="~/images/back-icon-3.png" style="padding-left: 30px;" />
    </a>
    <div>
    </div>
    <div>
    </div>
</div>
<div class="d-flex justify-content-center">
    <span class="mx-2 span-custom"><a style="font-weight: 500; color: #5A5A5A; text-decoration: none;" asp-page="./Index">Orders</a></span>
    <span> / </span>
    <span class="mx-2" style="font-weight: 500; color: #000;">Details</span>
</div>
<h1 class="text-center mt-5 mb-5">DETAILS</h1>


<div class="card shadow p-3 mb-5 bg-white rounded" style="margin: 0 200px 0 200px;">
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Total)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Total)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrderStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrderStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrdeDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrdeDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShippedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShippedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShipAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShipAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Paymentmethod)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Paymentmethod)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.PaymentStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.PaymentStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.User)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.User.Address)
        </dd>
    </dl>
</div>

@if (Model.orderComboDetails != null && Model.orderComboDetails.Count > 0)
{
    <div>
        @foreach (var item in Model.orderComboDetails)
        {
            <dl class="row">
                <dt class="col-sm-2">
                    Combo @item.Combo.ComboName
                </dt>
                <dd class="col-sm-10">
                    Quantity: @item.Quantity
                </dd>
                <dd class="col-sm-10">
                    Unit price after discounted: @(((double)item.UnitPrice) - ((double)item.UnitPrice * item.Discount / 100))
                </dd>
            </dl>
        }
    </div>
}
@if (Model.orderProductDetails != null && Model.orderProductDetails.Count > 0)
{
    <div>
        @foreach (var item in Model.orderProductDetails)
        {
            <dl class="row">
                <dt class="col-sm-2">
                    @item.Product.ProductName
                </dt>
                <dd class="col-sm-10">
                    Quantity: @item.Quantity
                </dd>
                <dd class="col-sm-10">
                    Unit price after discounted: @(((double)item.UnitPrice) - ((double)item.UnitPrice * item.Discount / 100))
                </dd>
            </dl>
        }
    </div>
}
